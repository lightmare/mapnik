language: c

git:
  depth: 10
  submodules: false

env:
  global:
   - CCACHE_TEMPDIR=/tmp/.ccache-temp
   - CCACHE_COMPRESS=1
   - HEAVY_JOBS="2"
   - secure: "N3a5nzzsgpuu45k8qWdYsHNxrSnqeAGLTOYpfYoAH7B94vuf7pa7XV1tQjXbxrnx2D6ryTdtUtyRKwy7zXbwXxGt4DpczWEo8f6DUd6+obAp3kdnXABg2Sj4oA7KMs0F0CmoADy0jdUZD5YyOJHu64LCIIgzEQ9q49PFMNbU3IE="
   - secure: "iQYPNpMtejcgYeUkWZGIWz1msIco5qydJrhZTSCQOYahAQerdT7q5WZEpEo3G6IWOGgO1eo7GFuY8DvqQjw1+jC9b9mhkRNdo3LhGTKS9Gsbl5Q27k0rjlaFZmmQHrfPlQJwhfAIp+KLugHtQw5bCoLh+95E3j0F0DayF1tuJ3s="
addons:
  postgresql: "9.4"

cache:
  directories:
  - $HOME/.ccache

matrix:
  include:
    - os: linux
      sudo: false
      compiler: ": clang"
      env: JOBS=8 MASON_PUBLISH=true CXX="ccache clang++-3.5 -Qunused-arguments" CC="clang-3.5"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5' ]
          packages: [ 'clang-3.5' ]
    - os: linux
      sudo: false
      compiler: ": clang-coverage"
      env: JOBS=8 COVERAGE=true LLVM_VERSION="3.5" CXX="ccache clang++-3.5 -Qunused-arguments" CC="clang-3.5"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5' ]
          packages: [ 'clang-3.5', 'llvm-3.5-dev' ]
    - os: osx
      compiler: clang
      # https://docs.travis-ci.com/user/languages/objective-c/#Supported-OS-X-iOS-SDK-versions
      osx_image: xcode7.3 # upgrades clang from 6 -> 7
      env: CXX="ccache clang++" JOBS=6 HEAVY_JOBS=3

before_install:
 - source scripts/travis-common.sh
 - source scripts/travis-rcache.sh
 - export PYTHONUSERBASE=$(pwd)/mason_packages/.link
 - export PATH=${PYTHONUSERBASE}/bin:${PATH}
 - export COVERAGE=${COVERAGE:-false}
 - export MASON_PUBLISH=${MASON_PUBLISH:-false}
 - export BENCH=${BENCH:-false}
 - if [[ ${TRAVIS_BRANCH} != 'master' ]]; then export MASON_PUBLISH=false; fi
 - if [[ ${TRAVIS_PULL_REQUEST} != 'false' ]]; then export MASON_PUBLISH=false; fi
 - git_submodule_update --init --depth=50 'deps/mapbox/variant'

install:
 - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export CCACHE_READONLY=1; fi
 - on 'linux' export PYTHONPATH=${PYTHONUSERBASE}/lib/python2.7/site-packages
 - on 'osx' export PYTHONPATH=${PYTHONUSERBASE}/lib/python/site-packages
 - on 'osx' brew install ccache
 - on 'osx' brew rm postgis --force
 - on 'osx' brew install postgis --force
 - on 'osx' pg_ctl -w start -l postgres.log --pgdata /usr/local/var/postgres
 - on 'osx' createuser -s postgres
 - psql -c 'create database template_postgis;' -U postgres
 - psql -c 'create extension postgis;' -d template_postgis -U postgres
 - enabled ${COVERAGE} pip install --user cpp-coveralls

before_script:
 - source bootstrap.sh
 - commit_message_parse
 - on 'osx' rcache_download || true # failure is not fatal
 - ccache --version
 - ccache -p || true
 - ccache --show-stats || true

script:
 - export SCONSFLAGS='--debug=time'
 - configure BENCHMARK=${BENCH}
 - make
 - good && elapsed_minutes -lt 40 && download_test_data && make test
 - good && elapsed_minutes -lt 45 && enabled ${COVERAGE} coverage
 - good && elapsed_minutes -lt 45 && enabled ${BENCH} make bench

after_success:
 - if enabled ${MASON_PUBLISH}; then
     ./mason_latest.sh build &&
     ./mason_latest.sh link &&
     ./mason_latest.sh publish;
   fi

before_cache:
 - on 'osx' ccache --show-stats --max-size 100M --cleanup
 - on 'osx' rcache_upload
